{
	"Print C++": {
        "prefix": "cpp",
        "body": [
            "#include <bits/stdc++.h>",
            "#pragma GCC target(\"avx2\")",
            "#pragma GCC optimize(\"O3\")",
            "#pragma GCC optimize(\"unroll-loops\")",
            "#define fi first",
            "#define se second",
            "#define pb push_back",
            "",
            "using namespace std;",
            "",
            "/* ------------------------[ TEMPLATE ]------------------------ */",
            "namespace {",
            "\t// macros definitions",
            "\t#define Gint Read<ll>()",
            "\t#define Gstr Read<string>()",
            "\t#define all(a)  (a).begin(),  (a).end()",
            "\t#define rall(a) (a).rbegin(), (a).rend()",
            "\t#define For(i, u, v) for (int i = (u), _n_ = (v); i <= _n_; i++)",
            "\t#define Rof(i, u, v) for (int i = (u), _n_ = (v); i >= _n_; i--)",
            "\t",
            "\t// typedefs & constants",
            "\tusing ll = long long; using ld = long double; mt19937_64 rng;",
            "\tusing pii = pair<int, int>; using pli = pair<ll, int>; using pll = pair<ll, ll>;",
            "\ttemplate<class T> using MaxHeap = priority_queue<T, vector<T>,\t  less<T>>;",
            "\ttemplate<class T> using MinHeap = priority_queue<T, vector<T>, greater<T>>;",
            "\tconst ld eps = 0.01 * 0.01 * 0.01 * 0.01, pi = 3.1415926535897932384626433;",
            "\tconst ll mod = 1e9 + 7, lim = 1e6 + 2312, e30 = 1ll << 30, e60 = 1ll << 60;",
            "",
            "\t// useful functions",
            "\ttemplate<class A, class B>",
            "\tbool Maxz(A &a, B b) { return a < b && (a = b, true); }",
            "\ttemplate<class A, class B>",
            "\tbool Minz(A &a, B b) { return b < a && (a = b, true); }",
            "\ttemplate<class T> T Read() { T x; return cin >> x, x; }",
            "} // main template",
            "",
            "/* --------------------[ MAIN CODE GOES HERE ]-------------------- */",
            "",
            "ostream &submain(int testcase) {",
            "\t// YOUR CODE GOES HERE",
            "\t$0",
            "}",
            "",
            "int main() {",
            "\t// PLEASE DO NOT EDIT, THANKS !!",
            "\tcin.tie(nullptr) -> sync_with_stdio(false);",
            "\t#ifndef ONLINE_JUDGE",
            "\t\tfreopen(\"input.txt\", \"r\", stdin);",
            "\t\t//freopen(\"output.txt\", \"w\", stdout);",
            "\t\t//freopen(\"error.txt\", \"w\", stderr);",
            "\t\trng.seed((ll)main ^ time(0));",
            "\t\tauto starttime = chrono::high_resolution_clock::now();",
            "\t#endif ",
            "",
            "\tauto testcases = 1;",
            "\tFor(test, 1, testcases) submain(test);",
            "",
            "\t// PLEASE DO NOT EDIT, THANKS !!",
            "\t#ifndef ONLINE_JUDGE",
            "\t\tauto endtime = chrono::high_resolution_clock::now();",
            "\t\tauto duration = chrono::duration_cast<chrono::milliseconds>(endtime - starttime).count(); ",
            "\t\tcout << \"\\n=====\" << \"\\nUsed: \" << duration << \" ms\\n\";",
            "\t#endif",
            "}",
            "",
            "/* ---------------[ THIS IS MY KEYBOARD ¯_(ツ)_/¯ ]--------------- */",
            "/*",
            " * ┌───┐   ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐  ┌───┬───┬───┐",
            " * │Esc│   │ F1│ F2│ F3│ F4│ │ F5│ F6│ F7│ F8│ │ F9│F10│F11│F12│  │P/S│S L│P/B│   ┌┐    ┌┐    ┌┐",
            " * └───┘   └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┴───┘  └───┴───┴───┘   └┘    └┘    └┘",
            " * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐  ┌───┬───┬───┐  ┌───┬───┬───┬───┐",
            " * │~ `│! 1│@ 2│# 3│$ 4│% 5│^ 6│& 7│* 8│( 9│) 0│_ -│+ =│ BacSp │  │Ins│Hom│PUp│  │Num│ / │ * │ - │",
            " * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤  ├───┼───┼───┤  ├───┼───┼───┼───┤",
            " * │ Tab │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │{ [│} ]│ | \\ │  │Del│End│PDn│  │ 7 │ 8 │ 9 │   │",
            " * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤  └───┴───┴───┘  ├───┼───┼───┤ + │",
            " * │ Caps │ A │ S │ D │ F │ G │ H │ J │ K │ L │: ;│\" '│ Enter  │[Zang] (giorzang)│ 4 │ 5 │ 6 │   │",
            " * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤      ┌───┐      ├───┼───┼───┼───┤",
            " * │ Shift  │ Z │ X │ C │ V │ B │ N │ M │< ,│> .│? /│  Shift   │      │ ↑ │      │ 1 │ 2 │ 3 │   │",
            " * ├─────┬──┴─┬─┴──┬┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤  ┌───┼───┼───┐  ├───┴───┼───┤ E││",
            " * │ Ctrl│ Win│ Alt│         Space         │ Alt│ Win│Menu│Ctrl│  │ ← │ ↓ │ → │  │   0   │ . │←─┘│",
            " * └─────┴────┴────┴───────────────────────┴────┴────┴────┴────┘  └───┴───┴───┘  └───────┴───┴───┘",
            "*/"
        ],
        "description": "Print cpp"
    }

    "C++ Pro Max": {
        "prefix": "cpps",
        "body": [
            "#include <bits/stdc++.h>",
            "#ifndef Zang_LOCAL",
            "#define debug(...) \"Kawaiiii\"",
            "#endif",
            "#pragma GCC target(\"avx2\")",
            "#pragma GCC optimize(\"O3\")",
            "#pragma GCC optimize(\"unroll-loops\")",
            "#define fi first",
            "#define se second",
            "#define pb push_back",
            "",
            "using namespace std;",
            "",
            "/* ------------------------[ TEMPLATE ]------------------------ */",
            "namespace {",
            "\t// macros definitions",
            "\t#define Gint Read<ll>()",
            "\t#define Gstr Read<string>()",
            "\t#define all(a)  (a).begin(),  (a).end()",
            "\t#define rall(a) (a).rbegin(), (a).rend()",
            "\t#define For(i, u, v) for (int i = (u), _n_ = (v); i <= _n_; i++)",
            "\t#define Rof(i, u, v) for (int i = (u), _n_ = (v); i >= _n_; i--)",
            "\t",
            "\t// typedefs & constants",
            "\tusing ll = long long; using ld = long double; mt19937_64 rng;",
            "\tusing pii = pair<int, int>; using pli = pair<ll, int>; using pll = pair<ll, ll>;",
            "\ttemplate<class T> using MaxHeap = priority_queue<T, vector<T>,\t  less<T>>;",
            "\ttemplate<class T> using MinHeap = priority_queue<T, vector<T>, greater<T>>;",
            "\tconst ld eps = 0.01 * 0.01 * 0.01 * 0.01, pi = 3.1415926535897932384626433;",
            "\tconst ll mod = 1e9 + 7, lim = 1e6 + 2312, e30 = 1ll << 30, e60 = 1ll << 60;",
            "",
            "\t// useful functions",
            "\ttemplate<class A, class B>",
            "\tbool Maxz(A &a, B b) { return a < b && (a = b, true); }",
            "\ttemplate<class A, class B>",
            "\tbool Minz(A &a, B b) { return b < a && (a = b, true); }",
            "\ttemplate<class T> T Read() { T x; return cin >> x, x; }",
            "} // main template",
            "",
            "/* --------------------[ MAIN CODE GOES HERE ]-------------------- */",
            "",
            "ostream &submain(int testcase) {",
            "\t// YOUR CODE GOES HERE",
            "\t$0",
            "}",
            "",
            "int main() {",
            "\t// PLEASE DO NOT EDIT, THANKS !!",
            "\tcin.tie(nullptr)  -> sync_with_stdio(false);",
            "\tcerr.tie(nullptr) -> sync_with_stdio(false);",
            "\t#ifdef Zang_LOCAL",
            "\t\tfreopen(\"input.txt\", \"r\", stdin);",
            "\t\t//freopen(\"output.txt\", \"w\", stdout);",
            "\t\t//freopen(\"error.txt\", \"w\", stderr);",
            "\t\trng.seed((ll)main ^ time(0));",
            "\t\tauto starttime = chrono::high_resolution_clock::now();",
            "\t#endif ",
            "",
            "\tauto testcases = 1;",
            "\tFor(test, 1, testcases) submain(test);",
            "",
            "\t// PLEASE DO NOT EDIT, THANKS !!",
            "\t#ifdef Zang_LOCAL",
            "\t\tauto endtime = chrono::high_resolution_clock::now();",
            "\t\tauto duration = chrono::duration_cast<chrono::milliseconds>(endtime - starttime).count(); ",
            "\t\tcout << \"\\n=====\" << \"\\nUsed: \" << duration << \" ms\\n\";",
            "\t#endif",
            "}",
            "",
            "/* ---------------[ THIS IS MY KEYBOARD ¯_(ツ)_/¯ ]--------------- */",
            "/*",
            " * ┌───┐   ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐  ┌───┬───┬───┐",
            " * │Esc│   │ F1│ F2│ F3│ F4│ │ F5│ F6│ F7│ F8│ │ F9│F10│F11│F12│  │P/S│S L│P/B│   ┌┐    ┌┐    ┌┐",
            " * └───┘   └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┴───┘  └───┴───┴───┘   └┘    └┘    └┘",
            " * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐  ┌───┬───┬───┐  ┌───┬───┬───┬───┐",
            " * │~ `│! 1│@ 2│# 3│$ 4│% 5│^ 6│& 7│* 8│( 9│) 0│_ -│+ =│ BacSp │  │Ins│Hom│PUp│  │Num│ / │ * │ - │",
            " * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤  ├───┼───┼───┤  ├───┼───┼───┼───┤",
            " * │ Tab │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │{ [│} ]│ | \\ │  │Del│End│PDn│  │ 7 │ 8 │ 9 │   │",
            " * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤  └───┴───┴───┘  ├───┼───┼───┤ + │",
            " * │ Caps │ A │ S │ D │ F │ G │ H │ J │ K │ L │: ;│\" '│ Enter  │[Zang] (giorzang)│ 4 │ 5 │ 6 │   │",
            " * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤      ┌───┐      ├───┼───┼───┼───┤",
            " * │ Shift  │ Z │ X │ C │ V │ B │ N │ M │< ,│> .│? /│  Shift   │      │ ↑ │      │ 1 │ 2 │ 3 │   │",
            " * ├─────┬──┴─┬─┴──┬┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤  ┌───┼───┼───┐  ├───┴───┼───┤ E││",
            " * │ Ctrl│ Win│ Alt│         Space         │ Alt│ Win│Menu│Ctrl│  │ ← │ ↓ │ → │  │   0   │ . │←─┘│",
            " * └─────┴────┴────┴───────────────────────┴────┴────┴────┴────┘  └───┴───┴───┘  └───────┴───┴───┘",
            "*/"
        ],
        "description": "Print C++"
    }

    "DEBUG!": {
        "prefix": "debug",
        "body": [
            "/* -------------------------[ DEBUG! ]------------------------- */",
            "#define debug(x...) std::cerr << \"[\" << #x << \"] = [\", _print(x)",
            "void __print(int x) { std::cerr << x; }",
            "void __print(long x) { std::cerr << x; }",
            "void __print(long long x) { std::cerr << x; }",
            "void __print(unsigned x) { std::cerr << x; }",
            "void __print(unsigned long x) { std::cerr << x; }",
            "void __print(unsigned long long x) { std::cerr << x; }",
            "void __print(float x) { std::cerr << x; }",
            "void __print(double x) { std::cerr << x; }",
            "void __print(long double x) { std::cerr << x; }",
            "void __print(char x) { std::cerr << '\\'' << x << '\\''; }",
            "void __print(const char *x) { std::cerr << '\\\"' << x << '\\\"'; }",
            "void __print(const std::string &x) { std::cerr << '\\\"' << x << '\\\"'; }",
            "void __print(bool x) { std::cerr << (x ? \"true\" : \"false\"); }",
            "",
            "template<typename T, typename V>",
            "void __print(const std::pair<T, V> &x) { std::cerr << '{'; __print(x.first); std::cerr << ','; __print(x.second); std::cerr << '}'; }",
            "template<typename T>",
            "void __print(const T &x) { int f = 0; std::cerr << '{'; for (auto &i: x) std::cerr << (f++ ? \",\" : \"\"), __print(i); std::cerr << \"}\"; }",
            "void _print() { std::cerr << \"]\\n\"; }",
            "template <typename T, typename... V>",
            "void _print(T t, V... v) { __print(t); if (sizeof...(v)) std::cerr << \", \"; _print(v...); }",
            ""
        ],
        "description": "Print debug code"
    }
}

